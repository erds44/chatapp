{"version":3,"sources":["components/login.js","helpers/color-user-helper.js","components/chat/chat-area/ChatMessage.js","components/chat/chat-area/ChatMessages.js","components/chat/chat-area/Compose.js","components/chat/chat-area/ChatArea.js","components/websocket/Websocket.js","components/roomForm/roomForm.js","components/room/room.js","components/chat/userList/index.js","components/chat/index.js","App.js","reportWebVitals.js","index.js"],"names":["layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","Login","history","useHistory","title","style","width","margin","name","onFinish","values","console","log","push","Item","label","rules","type","min","max","TextArea","offset","htmlType","COLORS","copyCOLORS","COLOR_ASSIGNS","assignColors","id","color","shift","getAColor","ChatMessage","message","onMessageDelete","currentUser","onMessageRecall","messageId","onMessageEdit","text","time","sender","menu","onClick","event","key","map","operation","className","backgroundColor","colorHelper","verticalAlign","size","gap","split","getDisplayName","onMouseEnter","dropDownElement","document","getElementById","visibility","opacity","onMouseLeave","overlay","placement","ChatMessages","inputMessages","useState","messages","setMessages","useEffect","Input","Compose","messageForEdit","handleMessageSend","onMessageSend","value","rows","showCount","onPressEnter","Content","Layout","Footer","ChatArea","Header","chatRoom","webSocket","WebSocket","RoomForm","props","interests","Option","Select","visible","setVisible","i","content","send","JSON","stringify","outerWidth","valuePropName","mode","allowClear","placeholder","trigger","onVisibleChange","PlusCircleOutlined","SubMenu","Menu","Room","e","MinusCircleOutlined","CloseCircleOutlined","GroupOutlined","ItemGroup","UserList","ColorList","itemLayout","dataSource","renderItem","item","Meta","avatar","Math","floor","random","first","description","last","school","shape","alert","Sider","Chat","allMessages","setAllMessages","selectedChatRoom","height","theme","padding","borderLeft","fontSize","fontWeight","length","right","minHeight","filter","m","textAlign","createBrowserHistory","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e685da94.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Form, Input, InputNumber, Button } from 'antd'\r\nimport { Card } from 'antd'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 20 },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not validate email!',\r\n    number: '${label} is not a validate number!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\n\r\nconst Login = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const onFinish = values => {\r\n        console.log(values);\r\n        history.push('/chat');\r\n    };\r\n\r\n    return (\r\n        <Card title=\"Login Chat Room\" style={{ width: '600px', margin: '80px auto'}}>\r\n            <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n            <Form.Item name={['user', 'name']} label=\"Name\" rules={[{ required: true }]}>\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item name={['user', 'email']} label=\"Email\" rules={[{ type: 'email' }]}>\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item name={['user', 'age']} label=\"Age\" rules={[{ type: 'number', min: 0, max: 99 }]}>\r\n                <InputNumber />\r\n            </Form.Item>\r\n            <Form.Item name={['user', 'website']} label=\"Website\">\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item name={['user', 'introduction']} label=\"Introduction\">\r\n                <Input.TextArea />\r\n            </Form.Item>\r\n            <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 20 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n                </Button>\r\n            </Form.Item>\r\n            </Form>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Login;","const FLAT_BLUE = '#355ca9';\r\nconst DEEP_LAVENDER = '#8665b6';\r\nconst AZURE = '#2196f2';\r\nconst COOL_BLUE = '#5571bc';\r\nconst ORANGE_RED = '#fe5722';\r\nconst SLATE = '#43555f';\r\nconst TEAL = '#009688';\r\nconst MARIGOLD = '#febf0a';\r\nconst PINK = '#e81f63';\r\nconst AZURE_TWO = '#06a9f3';\r\nconst TURQUOISE_BLUE = '#03bcd3';\r\nconst TANGERINE = '#fe9800';\r\nconst SUNSHINE_YELLOW = '#feea3b';\r\nconst SICKLY_YELLOW = '#ccdb3a';\r\nconst GREEN = '#8bc24b';\r\nconst MID_GREEN = '#4baf50';\r\nconst VIRIDIAN = '#22828d';\r\nconst FRENCH_BLUE = '#3f51b5';\r\nconst BARNEY = '#9c26b0';\r\nconst BLUEY_PURPLE = '#673ab7';\r\nconst BLUE_GREY = '#607d8b';\r\nconst WARM_GREY = '#9e9e9e';\r\nconst DARK_TAUPE = '#795548';\r\n\r\nconst COLORS = [\r\n    FLAT_BLUE,\r\n    AZURE,\r\n    COOL_BLUE,\r\n    ORANGE_RED,\r\n    SLATE,\r\n    DEEP_LAVENDER,\r\n    TEAL,\r\n    MARIGOLD,\r\n    PINK,\r\n    AZURE_TWO,\r\n    TURQUOISE_BLUE,\r\n    TANGERINE,\r\n    SUNSHINE_YELLOW,\r\n    SICKLY_YELLOW,\r\n    GREEN,\r\n    MID_GREEN,\r\n    VIRIDIAN,\r\n    FRENCH_BLUE,\r\n    BARNEY,\r\n    BLUEY_PURPLE,\r\n    BLUE_GREY,\r\n    WARM_GREY,\r\n    DARK_TAUPE,\r\n];\r\nlet copyCOLORS = [\r\n    ...COLORS,\r\n];\r\n\r\nconst getAColor = () => {\r\n    let color = copyCOLORS.shift();\r\n    if (!color) {\r\n        copyCOLORS = [\r\n            ...COLORS,\r\n        ];\r\n        color = copyCOLORS.shift();\r\n    }\r\n    return color;\r\n};\r\n\r\nconst COLOR_ASSIGNS = {};\r\nconst assignColors = (id) => {\r\n    if (!COLOR_ASSIGNS[id]) {\r\n        COLOR_ASSIGNS[id] = getAColor();\r\n    }\r\n    return COLOR_ASSIGNS[id];\r\n};\r\nexport default assignColors;\r\n","import React from \"react\";\r\nimport { Row, Col, Menu, Dropdown, Button, Avatar } from \"antd\";\r\nimport moment from \"moment\";\r\nimport \"./ChatMessage.css\";\r\nimport colorHelper from \"../../../helpers/color-user-helper\";\r\n\r\nconst ChatMessage = ({\r\n  message,\r\n  currentUser,\r\n  onMessageRecall,\r\n  onMessageDelete,\r\n  onMessageEdit\r\n}) => {\r\n  const { id: messageId, text, time, sender } = message;\r\n  // const isMyMessage = currentUser.id === message.userId;\r\n  const isMyMessage = true;\r\n  const operationForMyMessage = [\"edit\", \"delete\", \"recall\"];\r\n  const operationForOthersMessage = [\"report\"];\r\n  const handleMenuClick = event => {\r\n    if (!event || !event.key) {\r\n      return;\r\n    }\r\n    switch (event.key) {\r\n      case \"edit\": {\r\n        break;\r\n      }\r\n      case \"delete\": {\r\n        onMessageDelete(messageId);\r\n        break;\r\n      }\r\n      case \"recall\": {\r\n        break;\r\n      }\r\n      case \"report\": {\r\n        break;\r\n      }\r\n    }\r\n  };\r\n  const menu = (\r\n    <Menu onClick={handleMenuClick}>\r\n      {isMyMessage &&\r\n        operationForMyMessage.map(operation => {\r\n          return <Menu.Item key={operation}>{operation}</Menu.Item>;\r\n        })}\r\n      {!isMyMessage &&\r\n        operationForOthersMessage.map(operation => {\r\n          return <Menu.Item key={operation}>{operation}</Menu.Item>;\r\n        })}\r\n    </Menu>\r\n  );\r\n\r\n  const handleMouseEnter = () => {\r\n    const dropDownElement = document.getElementById(`${messageId}-dropdown`);\r\n    if (!dropDownElement) {\r\n      return;\r\n    }\r\n    dropDownElement.style.visibility = \"visible\";\r\n    dropDownElement.style.opacity = \"1\";\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    const dropDownElement = document.getElementById(`${messageId}-dropdown`);\r\n    if (!dropDownElement) {\r\n      return;\r\n    }\r\n    dropDownElement.style.visibility = \"hidden\";\r\n    dropDownElement.style.opacity = \"0\";\r\n  };\r\n\r\n  const getDisplayName = sender => {\r\n    return sender.split(\" \").map(name => name[0]);\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={1} className=\"avatar-container\">\r\n        <Avatar\r\n          style={{\r\n            backgroundColor: colorHelper(sender),\r\n            verticalAlign: \"middle\"\r\n          }}\r\n          size=\"large\"\r\n          gap={1}\r\n        >\r\n          {getDisplayName(sender)}\r\n        </Avatar>\r\n      </Col>\r\n      <Col span={23}>\r\n        <Row\r\n          className={`${messageId ?? \"\"} message-wrapper`}\r\n          onMouseEnter={handleMouseEnter}\r\n          onMouseLeave={handleMouseLeave}\r\n        >\r\n          <Col span={22}>\r\n            <Row className=\"message-header\">\r\n              <Col className=\"message-sender\">{sender}</Col>\r\n              <Col className=\"message-time\">{time}</Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"message-text\">{text}</Col>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            span={2}\r\n            id={`${messageId}-dropdown`}\r\n            className={\"message-dropdown\"}\r\n          >\r\n            <Dropdown overlay={menu} placement=\"bottomLeft\">\r\n              <Button>...</Button>\r\n            </Dropdown>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default ChatMessage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row } from \"antd\";\r\nimport ChatMessage from \"./ChatMessage\";\r\nimport \"./ChatMessages.css\";\r\n\r\nconst ChatMessages = ({ inputMessages, onMessageDelete }) => {\r\n  const [messages, setMessages] = useState(inputMessages);\r\n  useEffect(() => {\r\n    if (inputMessages) {\r\n      setMessages(inputMessages);\r\n    }\r\n  }, [inputMessages]);\r\n  return (\r\n    <article id={\"chat-messages\"}>\r\n      {messages &&\r\n        messages.map(message => {\r\n          return (\r\n            <Row className=\"message\">\r\n              <ChatMessage\r\n                message={message}\r\n                onMessageDelete={onMessageDelete}\r\n              />\r\n            </Row>\r\n          );\r\n        })}\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default ChatMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Input, Button } from \"antd\";\r\nimport \"./Compose.css\";\r\nconst { TextArea } = Input;\r\n\r\nconst Compose = ({ messageForEdit = null, handleMessageSend }) => {\r\n  const onMessageSend = value => {\r\n    handleMessageSend(value);\r\n  };\r\n  return (\r\n    <div id={\"compose\"}>\r\n      <Row>\r\n        <TextArea\r\n          className=\"textarea\"\r\n          rows={4}\r\n          showCount={true}\r\n          onPressEnter={onMessageSend}\r\n        />\r\n      </Row>\r\n      <Row>\r\n        <Col span={3} offset={21}>\r\n          <Button onClick={onMessageSend}>Send</Button>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Compose;\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Row, Layout } from \"antd\";\r\nimport ChatMessages from \"./ChatMessages\";\r\nimport Compose from \"./Compose\";\r\nimport ChatAreaHeader from \"./ChatAreaHeader\";\r\nimport \"./ChatArea.css\";\r\n\r\nconst { Content, Footer, Header } = Layout;\r\n\r\nconst ChatArea = ({ inputMessages, chatRoom, onMessageDelete }) => {\r\n  const [messages, setMessages] = useState(inputMessages);\r\n\r\n  useEffect(() => {\r\n    if (inputMessages) {\r\n      setMessages(inputMessages);\r\n    }\r\n  }, [inputMessages]);\r\n\r\n  const handleMessageDelete = messageId => {\r\n    onMessageDelete(messageId, chatRoom);\r\n  };\r\n\r\n  return (\r\n    <div id={\"chat-area\"}>\r\n      <Layout>\r\n        <Content>\r\n          <ChatMessages\r\n            inputMessages={messages}\r\n            onMessageDelete={handleMessageDelete}\r\n          />\r\n        </Content>\r\n        <Footer>\r\n          <Compose />\r\n        </Footer>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatArea;\r\n","// const webSocket = new WebSocket(\"ws://localhost:4567/chatapp\")\r\nconst webSocket = new WebSocket(\"wss://https://chatapp-team-sammytheowl.herokuapp.com/chatapp\")\r\nexport default webSocket;","import {Form, Input, Switch, Select, Button, Popover, Menu} from 'antd';\r\nimport React, {useState} from 'react';\r\nimport {PlusCircleOutlined} from \"@ant-design/icons\";\r\nimport webSocket from \"../websocket/Websocket\";\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not validate email!',\r\n        number: '${label} is not a validate number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nconst RoomForm = (props) => {\r\n    const interests = [];\r\n    const {Option} = Select;\r\n    const {visible, setVisible} = props;\r\n\r\n    for (let i = 1; i < 10; i++) {\r\n        interests.push(<Option key={i}>{\"Interest \" + i}</Option>);\r\n    }\r\n\r\n    //const [visible, setVisible] = useState(false);\r\n\r\n\r\n    const onFinish = (values) => {\r\n        webSocket.send(JSON.stringify(values));\r\n        setVisible(false);\r\n    };\r\n\r\n    const handleVisibleChange = visible => {\r\n        setVisible(visible);\r\n    };\r\n\r\n    const hide = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    return (\r\n        <Popover placement=\"rightTop\" title={\"Create Room\"}\r\n                 content={<Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}\r\n                                style={{outerWidth: \"500\"}}>\r\n                     <Form.Item name={['user', 'name']}\r\n                                label=\"Name\"\r\n                                rules={[{required: true}]}><Input/>\r\n                     </Form.Item>\r\n                     <Form.Item name=\"switch\" label=\"Private\" valuePropName=\"checked\"><Switch/>\r\n                     </Form.Item>\r\n                     <Form.Item name={['user', 'interest']}\r\n                                label=\"Interests\">\r\n                         <Select mode=\"multiple\"\r\n                                 allowClear\r\n                                 style={{width: '100%'}}\r\n                                 placeholder=\"Please select\">{interests}</Select>\r\n                         <br/>\r\n                     </Form.Item>\r\n\r\n                     <Form.Item wrapperCol={{...layout.wrapperCol, offset: 8}}>\r\n                         <Button type=\"primary\" htmlType=\"submit\">\r\n                             Submit\r\n                         </Button>\r\n                     </Form.Item>\r\n                 </Form>}\r\n                 trigger=\"click\"\r\n                 visible={visible}\r\n                 onVisibleChange={handleVisibleChange}>\r\n            <span><PlusCircleOutlined/></span>Create\r\n        </Popover>\r\n    );\r\n};\r\nexport default RoomForm;\r\n","import {Menu, Tag, Popover, Button} from \"antd\";\r\nimport {CloseCircleOutlined, GroupOutlined, MinusCircleOutlined, PlusCircleOutlined} from \"@ant-design/icons\";\r\nimport React, {useState} from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\nimport RoomForm from \"../roomForm/roomForm\";\r\nconst {SubMenu} = Menu;\r\n\r\nconst Room = () => {\r\n    const [rooms, setRooms] = useState([]);\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const handleClick = (e) => {\r\n        if(e.key === \"create\") {\r\n            setVisible(true);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Menu mode=\"inline\" onClick={handleClick}>\r\n                <Menu.Item key=\"create\">\r\n                    <RoomForm visible={visible} setVisible={setVisible}/>\r\n                </Menu.Item>\r\n                <SubMenu title={<span><span><MinusCircleOutlined/></span>Exit</span>}>\r\n                    <Menu.Item key=\"7\">Room 1</Menu.Item>\r\n                </SubMenu>\r\n                <Menu.Item><span><CloseCircleOutlined/></span>Exit All</Menu.Item>\r\n                <SubMenu key=\"JoinedRooms\" title={<span><GroupOutlined/><span>Joined Rooms</span></span>}>\r\n                    <Menu.ItemGroup key=\"g2\">\r\n                        <SubMenu key=\"sub3\" title=\"Room 1\">\r\n                            <Menu.Item key=\"u1\"><Tag color=\"magenta\">Owner</Tag>User 1</Menu.Item>\r\n                            <Menu.Item key=\"u2\"><Tag color=\"green\">Member</Tag>User 2</Menu.Item>\r\n                            <Menu.Item key=\"u3\"><Tag color=\"green\">Member</Tag>User 3</Menu.Item>\r\n                        </SubMenu>\r\n                    </Menu.ItemGroup>\r\n                </SubMenu>\r\n                <SubMenu key=\"allRooms\" title={<span><GroupOutlined/><span>All Rooms</span></span>}>\r\n                    <Menu.ItemGroup key=\"g2\">\r\n                        <Menu.Item key=\"room1\">Room 1</Menu.Item>\r\n                        <Menu.Item key=\"room2\">Room 2</Menu.Item>\r\n                        <Menu.Item key=\"room3\">Room 3</Menu.Item>\r\n                    </Menu.ItemGroup>\r\n                </SubMenu>\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\nexport default Room;","import { List, Avatar, Button } from 'antd';\r\n\r\nconst UserList = () => {\r\n    const data = [\r\n        {\"name\":{\"title\":\"Miss\",\"first\":\"Weiwei\",\"last\":\"Zhou\"},\"school\":\"Rice University\",\"interest\":\"Reading\"},\r\n        {\"name\":{\"title\":\"Mr\",\"first\":\"Xiao\",\"last\":\"Xia\"},\"school\":\"Rice University\",\"interest\":\"Sports\"},\r\n        {\"name\":{\"title\":\"Mr\",\"first\":\"Zhijian\",\"last\":\"Yao\"},\"school\":\"Rice University\",\"interest\":\"Traveling\"},\r\n        {\"name\":{\"title\":\"Mr\",\"first\":\"Xuyang\",\"last\":\"Xiao\"},\"school\":\"Rice University\",\"interest\":\"Sports\"},\r\n        {\"name\":{\"title\":\"Mr\",\"first\":\"Wenlong\",\"last\":\"Yan\"},\"school\":\"Rice University\",\"interest\":\"Sports\"},\r\n        {\"name\":{\"title\":\"Miss\",\"first\":\"Xinru\",\"last\":\"Xiao\"},\"school\":\"Rice University\",\"interest\":\"Sports\"},\r\n    ]\r\n    const ColorList = ['#f56a00', '#7265e6', '#ffbf00', '#00a2ae'];\r\n\r\n    return (\r\n\r\n        <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={data}\r\n            renderItem={item => (\r\n                <List.Item>\r\n\r\n                    <List.Item.Meta\r\n                        avatar={      <Avatar style={{ backgroundColor: ColorList[Math.floor(Math.random()*5)], verticalAlign: 'middle' }} size=\"large\" gap={4}>\r\n                            {item.name.first[0]}\r\n                        </Avatar>}\r\n                        description={item.name.first + \" \" +item.name.last}\r\n                        title = {item.school}\r\n                    />\r\n\r\n                    <Button type=\"primary\" shape=\"round\" size='small'\r\n                            onClick={() => alert(\"to complete\")}>\r\n                        Chat!\r\n                    </Button>\r\n\r\n                </List.Item>\r\n            )}\r\n        />\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default UserList;","import React, { useState } from 'react'\r\nimport {Layout, Row, Col} from 'antd'\r\nimport {Button, Popover} from 'antd'\r\nimport {Route, useHistory} from 'react-router-dom'\r\nimport ChatArea from \"./chat-area/ChatArea\";\r\nimport Room from \"../room/room\";\r\nimport UserList from \"./userList\";\r\n\r\nconst {Header, Content, Footer, Sider} = Layout;\r\nconst Chat = (props) => {\r\n\r\n    const history = useHistory();\r\n    const [allMessages, setAllMessages] = useState({\r\n        'Chat Room 1': [\r\n            {\r\n                'id': 1,\r\n                'sender': 'Xiao Xia',\r\n                'text': 'This is the first message for chat room 1',\r\n                'time': '2020-10-29 08:00:00'\r\n            },\r\n            {\r\n                'id': 2,\r\n                'sender': 'Zhijian Yao',\r\n                'text': 'This is the second message for chat room 1',\r\n                'time': '2020-10-29 08:05:00'\r\n            },\r\n            {\r\n                'id': 3,\r\n                'sender': 'Weiwei Zhou',\r\n                'text': 'This is the third message for chat room 1',\r\n                'time': '2020-10-29 08:15:30'\r\n            }\r\n        ]\r\n    });\r\n    const userMap = {\r\n        'Chat Room 1': [\"Xiao Xia\", \"Zhijian Yao\", \"Weiwei Zhou\"]\r\n    };\r\n    const selectedChatRoom = 'Chat Room 1';\r\n    const currentUser = { name: 'Xiao Xia' };\r\n    const handleMessageDelete = ( messageId, chatRoom) => {\r\n        allMessages[chatRoom] = allMessages[chatRoom].filter((m) => m.id !== messageId);\r\n        setAllMessages({...allMessages});\r\n    }\r\n\r\n    return (\r\n        <Layout style={{height: '100vh'}}>\r\n            <Sider width='300px' theme='light'>\r\n                <Room/>\r\n            </Sider>\r\n            <Layout>\r\n                <Header style={{padding: 0, backgroundColor: 'white', borderLeft: '2px solid rgba(0, 0, 0, 0.06)'}}>\r\n                    <span id={\"chat-area-header-room-name\"} style={{fontSize: 'larger', fontWeight: 'bolder'}}>{selectedChatRoom}</span>\r\n                    <span id={\"chat-area-header-user-count\"} style={{fontSize: 'medium'}}>{`  (${userMap[selectedChatRoom].length})`}</span>\r\n                    <Button style={{right: '-500px'}}\r\n                            type=\"primary\" shape=\"round\" size='small'\r\n                            onClick={() => history.push('/')}>\r\n                        Logout\r\n                    </Button>\r\n                </Header>\r\n                <Content style={{margin: '24px 16px 0'}}>\r\n                    <Row style={{height: '100%'}}>\r\n                        <Col span={17}>\r\n                            <div className=\"site-layout-background\"\r\n                                 style={{ minHeight: 360, height: '100%' }}>\r\n                                <ChatArea\r\n                                    inputMessages={allMessages[selectedChatRoom]}\r\n                                    chatRoom={selectedChatRoom}\r\n                                    onMessageDelete={handleMessageDelete}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                        <Col span={7} style={{borderLeft: '2px solid rgba(0, 0, 0, 0.06)'}}>\r\n                            {UserList()}\r\n                        </Col>\r\n                    </Row>\r\n                </Content>\r\n                <Footer style={{textAlign: 'center'}}>Chat App ©2020 Created by Summy the Owl</Footer>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Chat;","import './App.css';\r\nimport React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Login from './components/login'\r\nimport Chat from './components/chat/index'\r\nimport { createBrowserHistory } from 'history'\r\n\r\nconst history = createBrowserHistory();\r\n\r\n\r\n/*\r\nwebSocket.onmessage = (msg) => call method(msg);\r\n*/\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n       <Router history={history}>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Login} />\r\n          <Route path=\"/chat\" exact component={Chat}/>\r\n        </Switch>\r\n      </Router> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}