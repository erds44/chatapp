{"version":3,"sources":["components/room/createRoom.js","components/websocket/Websocket.js","components/login/login.js","helpers/color-user-helper.js","components/chat/chat-area/ChatMessage.js","components/chat/chat-area/ChatMessages.js","components/chat/chat-area/Compose.js","components/chat/chat-area/ChatArea.js","components/room/joinedRoom.js","components/room/exitRoom.js","components/room/exitAllRooms.js","components/room/allRooms.js","components/room/report/constant.js","components/room/report/reportForm.js","components/room/report/reportAdminForm.js","components/room/index.js","components/chat/inviteForm/index.js","components/chat/userList/index.js","components/chat/index.js","actions/type.js","App.js","actions/index.js","reportWebVitals.js","reducers/loginReducer.js","reducers/roomReducer.js","reducers/reportReducer.js","reducers/index.js","reducers/messageReducer.js","reducers/userListReducer.js","index.js"],"names":["layout","labelCol","span","wrapperCol","validateMessages","required","CreateRoom","props","interests","Option","Select","visible","setVisible","useState","interestDisabled","setInterestDisabled","i","push","placement","title","content","name","onFinish","values","webSocket","send","JSON","stringify","command","body","interest","style","outerWidth","Item","label","rules","valuePropName","onClick","prevState","mode","allowClear","width","placeholder","disabled","offset","type","htmlType","trigger","onVisibleChange","PlusCircleOutlined","WebSocket","connect","state","ownProps","logIn","login","history","useHistory","schools","interest_string_list","school_string_list","dispatch","Form","useForm","validateFields","length","useEffect","isSignedIn","message","error","margin","headStyle","fontSize","backgroundColor","bodyStyle","console","log","user","school","textAlign","size","COLORS","copyCOLORS","COLOR_ASSIGNS","assignColors","id","color","shift","getAColor","ChatMessage","onMessageDelete","currentUser","onMessageRecall","messageId","onMessageEdit","text","time","sender","menu","event","key","map","operation","className","colorHelper","verticalAlign","gap","split","getDisplayName","onMouseEnter","dropDownElement","document","getElementById","visibility","opacity","onMouseLeave","overlay","ChatMessages","inputMessages","messages","setMessages","TextArea","Input","Compose","messageForEdit","handleMessageSend","onMessageSend","value","rows","showCount","onPressEnter","Content","Layout","Footer","ChatArea","Header","chatRoom","SubMenu","Menu","JoinedRoom","joinedRooms","userList","setReport","selectedKeys","GroupOutlined","index","tag","danger","reportRoom","reportName","ExitRoom","e","MinusCircleOutlined","ExitAllRooms","CloseCircleOutlined","AllRooms","allRooms","replace","reportReasons","ReportForm","undefined","setValue","checkedReason","setCheckedReason","okButtonDisabled","setOkButtonDisabled","report","onOk","reportedUsername","reportedReason","reportedRoom","onCancel","okButtonProps","Group","class","onChange","target","marginLeft","reportStore","isReportAdminVisible","okText","cancelText","room","setJoinedRooms","setUserList","setAllRooms","useMemo","msg","joinedRoom","Modal","success","inviteForm","align","UserList","ColorList","itemLayout","dataSource","renderItem","item","padding","Meta","avatar","Math","floor","random","first","description","last","shape","alert","Sider","Chat","allMessages","setAllMessages","selectedChatRoom","height","theme","borderLeft","fontWeight","right","minHeight","filter","m","SIGN_IN","SIGN_OUT","ON_MESSAGE","ROOM","ON_REPORT","createBrowserHistory","onMessage","data","parse","section","payload","request","param1","param2","param3","onopen","onmessage","path","exact","component","Login","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INTIAL_STATE","mesId","parseNestedList","list","v","substring","start","indexOf","end","ele","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.e22137f1.chunk.js","sourcesContent":["import {Form, Input, Switch, Select, Button, Popover, Menu, Modal} from 'antd';\r\nimport React, {useState} from 'react';\r\nimport {PlusCircleOutlined} from \"@ant-design/icons\";\r\nimport webSocket from \"../websocket/Websocket\";\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n};\r\n\r\nconst CreateRoom = (props) => {\r\n    const interests = [];\r\n    const {Option} = Select;\r\n    const {visible, setVisible} = props;\r\n    const [interestDisabled, setInterestDisabled] = useState(true);\r\n    for (let i = 1; i < 10; i++) {\r\n        interests.push(<Option key={i}>{\"Interest \" + i}</Option>);\r\n    }\r\n    const onFinish = (values) => {\r\n        webSocket.send(\r\n            JSON.stringify({\r\n                    command: \"createRoom\",\r\n                    body: {\r\n                        name: values.name,\r\n                        interests: values.interest\r\n                    }\r\n                }\r\n            )\r\n        )\r\n        setVisible(false);\r\n    };\r\n\r\n    const handleVisibleChange = visible => {\r\n        setVisible(visible);\r\n    };\r\n    return (\r\n        <Popover placement=\"rightTop\" title={\"Create Room\"}\r\n                 content={<Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}\r\n                                style={{outerWidth: \"500\"}}>\r\n                     <Form.Item name={\"name\"}\r\n                                label=\"Name\"\r\n                                rules={[{required: true}]}><Input/>\r\n                     </Form.Item>\r\n                     <Form.Item name=\"switch\" label=\"Private\" valuePropName=\"checked\"><Switch onClick={() => {\r\n                         setInterestDisabled(prevState => !prevState)\r\n                     }}/>\r\n                     </Form.Item>\r\n                     <Form.Item name={\"interest\"}\r\n                                label=\"Interests\">\r\n                         <Select mode=\"multiple\"\r\n                                 allowClear\r\n                                 style={{width: '100%'}}\r\n                                 placeholder=\"Please select\"\r\n                                 disabled={interestDisabled}>{interests}</Select>\r\n                     </Form.Item>\r\n\r\n                     <Form.Item wrapperCol={{...layout.wrapperCol, offset: 8}}>\r\n                         <Button type=\"primary\" htmlType=\"submit\">\r\n                             Submit\r\n                         </Button>\r\n                     </Form.Item>\r\n                 </Form>}\r\n                 trigger=\"click\"\r\n                 visible={visible}\r\n                 onVisibleChange={handleVisibleChange}>\r\n            <span><PlusCircleOutlined/></span>Create\r\n        </Popover>\r\n    );\r\n\r\n};\r\nexport default CreateRoom;\r\n\r\n\r\n","import CreateRoom from \"../room/createRoom\";\r\n\r\nconst webSocket = new WebSocket(\"ws://localhost:4567/chatapp\")\r\nexport default webSocket;\r\n// const webSocket = new WebSocket(\"wss://chatapp-team-sammytheowl.herokuapp.com/chatapp\")\r\n// webSocket.onmessage = message => {\r\n//     let request = JSON.parse(message.data);\r\n//     switch (request.request) {\r\n//         case \"createRoom\":\r\n//             //CreateRoom.handleCreateRoom(request);\r\n//             break;\r\n//         default:\r\n//             break;\r\n//     }\r\n// }\r\n\r\n\r\n\r\n","import {React, useEffect, useState} from 'react'\r\nimport {Form, Input, message, Button, Select} from 'antd'\r\nimport {Card} from 'antd'\r\nimport {useHistory} from 'react-router-dom'\r\nimport webSocket from \"../websocket/Websocket\"\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst layout = {\r\n    labelCol: {span: 4},\r\n    wrapperCol: {span: 20},\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!'\r\n};\r\n\r\nconst Login = (props) => {\r\n\r\n    const history = useHistory();\r\n    const {Option} = Select;\r\n    const interests = [];\r\n    const schools = [];\r\n    const interest_string_list = [\"Traveling\", \"Reading\", \"Music\", \"Sports\", \"Movies\", \"Games\"];\r\n    const school_string_list = [\"Rice University\", \"Duke University\", \"USC\", \"UCLA\", \"New York University\", \"Other\"];\r\n    const {dispatch, logIn} = props;\r\n    const [form] = Form.useForm();\r\n    const {validateFields} = form;\r\n\r\n    for (let i = 0; i < school_string_list.length; i++) {\r\n        schools.push(<Option key={i}>{school_string_list[i]}</Option>);\r\n    }\r\n\r\n    for (let i = 0; i < interest_string_list.length; i++) {\r\n        interests.push(<Option key={i}>{interest_string_list[i]}</Option>);\r\n    }\r\n\r\n    const onFinish = values => {\r\n        console.log(values.user);\r\n        webSocket.send(\r\n            JSON.stringify({\r\n                command: \"login\",\r\n                body: {\r\n                    name: values.user.name,\r\n                    school: values.user.school,\r\n                    interests: interest_string_list\r\n                }\r\n            })\r\n        )\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(logIn.isSignedIn !== null) {\r\n            if(logIn.isSignedIn === true) {\r\n                history.push('/chat');\r\n            }\r\n            else {\r\n                message.error(\"This user name has been used, please try another one.\")\r\n            }\r\n        }\r\n    }, [logIn])\r\n\r\n    return (\r\n        <Card title=\"Login Chat Index\" style={{width: '600px', margin: '80px auto'}}\r\n              headStyle={{fontSize: '30px', backgroundColor: '#d9d9d9'}}\r\n              bodyStyle={{backgroundColor: '#f5f5f5'}}>\r\n            <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item name={['user', 'name']} label=\"Name\" rules={[{required: true}]}>\r\n                    <Input placeholder=\"Your Name\"/>\r\n                </Form.Item>\r\n                <Form.Item name={['user', 'school']} label=\"School\">\r\n                    <Select style={{width: '100%', textAlign: 'left'}}\r\n                            placeholder=\"Please select your school\">{schools}</Select>\r\n                    <br/>\r\n                </Form.Item>\r\n                <Form.Item name={['user', 'interests']} label=\"Interests\">\r\n                    <Select mode=\"multiple\"\r\n                            allowClear\r\n                            style={{width: '100%', textAlign: 'left'}}\r\n                            placeholder=\"Please select your interests\">{interests}</Select>\r\n                    <br/>\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{...layout.wrapperCol, offset: 20}}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\" >\r\n                        Login\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Card>\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { logIn: state.login }\r\n  };\r\n\r\nexport default connect(mapStateToProps, {})(Login);","const FLAT_BLUE = '#355ca9';\r\nconst DEEP_LAVENDER = '#8665b6';\r\nconst AZURE = '#2196f2';\r\nconst COOL_BLUE = '#5571bc';\r\nconst ORANGE_RED = '#fe5722';\r\nconst SLATE = '#43555f';\r\nconst TEAL = '#009688';\r\nconst MARIGOLD = '#febf0a';\r\nconst PINK = '#e81f63';\r\nconst AZURE_TWO = '#06a9f3';\r\nconst TURQUOISE_BLUE = '#03bcd3';\r\nconst TANGERINE = '#fe9800';\r\nconst SUNSHINE_YELLOW = '#feea3b';\r\nconst SICKLY_YELLOW = '#ccdb3a';\r\nconst GREEN = '#8bc24b';\r\nconst MID_GREEN = '#4baf50';\r\nconst VIRIDIAN = '#22828d';\r\nconst FRENCH_BLUE = '#3f51b5';\r\nconst BARNEY = '#9c26b0';\r\nconst BLUEY_PURPLE = '#673ab7';\r\nconst BLUE_GREY = '#607d8b';\r\nconst WARM_GREY = '#9e9e9e';\r\nconst DARK_TAUPE = '#795548';\r\n\r\nconst COLORS = [\r\n    FLAT_BLUE,\r\n    AZURE,\r\n    COOL_BLUE,\r\n    ORANGE_RED,\r\n    SLATE,\r\n    DEEP_LAVENDER,\r\n    TEAL,\r\n    MARIGOLD,\r\n    PINK,\r\n    AZURE_TWO,\r\n    TURQUOISE_BLUE,\r\n    TANGERINE,\r\n    SUNSHINE_YELLOW,\r\n    SICKLY_YELLOW,\r\n    GREEN,\r\n    MID_GREEN,\r\n    VIRIDIAN,\r\n    FRENCH_BLUE,\r\n    BARNEY,\r\n    BLUEY_PURPLE,\r\n    BLUE_GREY,\r\n    WARM_GREY,\r\n    DARK_TAUPE,\r\n];\r\nlet copyCOLORS = [\r\n    ...COLORS,\r\n];\r\n\r\nconst getAColor = () => {\r\n    let color = copyCOLORS.shift();\r\n    if (!color) {\r\n        copyCOLORS = [\r\n            ...COLORS,\r\n        ];\r\n        color = copyCOLORS.shift();\r\n    }\r\n    return color;\r\n};\r\n\r\nconst COLOR_ASSIGNS = {};\r\nconst assignColors = (id) => {\r\n    if (!COLOR_ASSIGNS[id]) {\r\n        COLOR_ASSIGNS[id] = getAColor();\r\n    }\r\n    return COLOR_ASSIGNS[id];\r\n};\r\nexport default assignColors;\r\n","import React from \"react\";\r\nimport { Row, Col, Menu, Dropdown, Button, Avatar } from \"antd\";\r\nimport moment from \"moment\";\r\nimport \"./ChatMessage.css\";\r\nimport colorHelper from \"../../../helpers/color-user-helper\";\r\n\r\nconst ChatMessage = ({\r\n  message,\r\n  currentUser,\r\n  onMessageRecall,\r\n  onMessageDelete,\r\n  onMessageEdit\r\n}) => {\r\n  const { id: messageId, text, time, sender } = message;\r\n  // const isMyMessage = currentUser.id === message.userId;\r\n  const isMyMessage = true;\r\n  const operationForMyMessage = [\"edit\", \"delete\", \"recall\"];\r\n  const operationForOthersMessage = [\"report\"];\r\n  const handleMenuClick = event => {\r\n    if (!event || !event.key) {\r\n      return;\r\n    }\r\n    switch (event.key) {\r\n      case \"edit\": {\r\n        break;\r\n      }\r\n      case \"delete\": {\r\n        onMessageDelete(messageId);\r\n        break;\r\n      }\r\n      case \"recall\": {\r\n        break;\r\n      }\r\n      case \"report\": {\r\n        break;\r\n      }\r\n    }\r\n  };\r\n  const menu = (\r\n    <Menu onClick={handleMenuClick}>\r\n      {isMyMessage &&\r\n        operationForMyMessage.map(operation => {\r\n          return <Menu.Item key={operation}>{operation}</Menu.Item>;\r\n        })}\r\n      {!isMyMessage &&\r\n        operationForOthersMessage.map(operation => {\r\n          return <Menu.Item key={operation}>{operation}</Menu.Item>;\r\n        })}\r\n    </Menu>\r\n  );\r\n\r\n  const handleMouseEnter = () => {\r\n    const dropDownElement = document.getElementById(`${messageId}-dropdown`);\r\n    if (!dropDownElement) {\r\n      return;\r\n    }\r\n    dropDownElement.style.visibility = \"visible\";\r\n    dropDownElement.style.opacity = \"1\";\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    const dropDownElement = document.getElementById(`${messageId}-dropdown`);\r\n    if (!dropDownElement) {\r\n      return;\r\n    }\r\n    dropDownElement.style.visibility = \"hidden\";\r\n    dropDownElement.style.opacity = \"0\";\r\n  };\r\n\r\n  const getDisplayName = sender => {\r\n    return sender.split(\" \").map(name => name[0]);\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={1} className=\"avatar-container\">\r\n        <Avatar\r\n          style={{\r\n            backgroundColor: colorHelper(sender),\r\n            verticalAlign: \"middle\"\r\n          }}\r\n          size=\"large\"\r\n          gap={1}\r\n        >\r\n          {getDisplayName(sender)}\r\n        </Avatar>\r\n      </Col>\r\n      <Col span={23}>\r\n        <Row\r\n          className={`${messageId ?? \"\"} message-wrapper`}\r\n          onMouseEnter={handleMouseEnter}\r\n          onMouseLeave={handleMouseLeave}\r\n        >\r\n          <Col span={22}>\r\n            <Row className=\"message-header\">\r\n              <Col className=\"message-sender\">{sender}</Col>\r\n              <Col className=\"message-time\">{time}</Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"message-text\">{text}</Col>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            span={2}\r\n            id={`${messageId}-dropdown`}\r\n            className={\"message-dropdown\"}\r\n          >\r\n            <Dropdown overlay={menu} placement=\"bottomLeft\">\r\n              <Button>...</Button>\r\n            </Dropdown>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default ChatMessage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row } from \"antd\";\r\nimport ChatMessage from \"./ChatMessage\";\r\nimport \"./ChatMessages.css\";\r\n\r\nconst ChatMessages = ({ inputMessages, onMessageDelete }) => {\r\n  const [messages, setMessages] = useState(inputMessages);\r\n  useEffect(() => {\r\n    if (inputMessages) {\r\n      setMessages(inputMessages);\r\n    }\r\n  }, [inputMessages]);\r\n  return (\r\n    <article id={\"chat-messages\"}>\r\n      {messages &&\r\n        messages.map(message => {\r\n          return (\r\n            <Row className=\"message\">\r\n              <ChatMessage\r\n                message={message}\r\n                onMessageDelete={onMessageDelete}\r\n              />\r\n            </Row>\r\n          );\r\n        })}\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default ChatMessages;\r\n","import React from \"react\";\r\nimport { Row, Col, Input, Button } from \"antd\";\r\nimport \"./Compose.css\";\r\nconst { TextArea } = Input;\r\n\r\nconst Compose = ({ messageForEdit = null, handleMessageSend }) => {\r\n  const onMessageSend = value => {\r\n    handleMessageSend(value);\r\n  };\r\n  return (\r\n    <div id={\"compose\"}>\r\n      <Row>\r\n        <TextArea\r\n          className=\"textarea\"\r\n          rows={4}\r\n          showCount={true}\r\n          onPressEnter={onMessageSend}\r\n        />\r\n      </Row>\r\n      <Row>\r\n        <Col span={3} offset={21}>\r\n          <Button onClick={onMessageSend}>Send</Button>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Compose;\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Row, Layout } from \"antd\";\r\nimport ChatMessages from \"./ChatMessages\";\r\nimport Compose from \"./Compose\";\r\nimport ChatAreaHeader from \"./ChatAreaHeader\";\r\nimport \"./ChatArea.css\";\r\n\r\nconst { Content, Footer, Header } = Layout;\r\n\r\nconst ChatArea = ({ inputMessages, chatRoom, onMessageDelete }) => {\r\n  const [messages, setMessages] = useState(inputMessages);\r\n\r\n  useEffect(() => {\r\n    if (inputMessages) {\r\n      setMessages(inputMessages);\r\n    }\r\n  }, [inputMessages]);\r\n\r\n  const handleMessageDelete = messageId => {\r\n    onMessageDelete(messageId, chatRoom);\r\n  };\r\n\r\n  return (\r\n    <div id={\"chat-area\"}>\r\n      <Layout>\r\n        <Content>\r\n          <ChatMessages\r\n            inputMessages={messages}\r\n            onMessageDelete={handleMessageDelete}\r\n          />\r\n        </Content>\r\n        <Footer>\r\n          <Compose />\r\n        </Footer>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatArea;\r\n","import {Menu, Tag, Button} from \"antd\";\r\nimport {GroupOutlined} from \"@ant-design/icons\";\r\nimport React, {useState} from \"react\";\r\n\r\n\r\nconst {SubMenu} = Menu;\r\nconst JoinedRoom = (props) => {\r\n    const {joinedRooms, userList, setReport} = props;\r\n    const report = (reportRoom, reportName) => {\r\n        setReport({visible: true, reportRoom: reportRoom, reportName: reportName})\r\n    }\r\n\r\n    return (\r\n        <Menu mode=\"inline\" selectedKeys={['']}>\r\n            <SubMenu title={<span><GroupOutlined/><span>Joined Rooms</span></span>}>\r\n                {\r\n                    joinedRooms.map((name, index) => {\r\n                        return (\r\n                            <SubMenu key={name} title={name}>\r\n                                {userList[index].map(name => {\r\n                                    let color = (userList[index][0] === name) ? \"magenta\" : \"green\";\r\n                                    let tag = (userList[index][0] === name) ? \"Admin\" : \"Member\";\r\n                                    return <Menu.Item key={name}><Tag color={color}>{tag}</Tag>{name}\r\n                                        <Button type=\"text\" danger onClick={() => {\r\n                                            report(joinedRooms[index], name)\r\n                                        }}>!</Button>\r\n                                    </Menu.Item>\r\n                                })\r\n                                }\r\n\r\n                            </SubMenu>\r\n                        )\r\n                    })\r\n                }\r\n            </SubMenu>\r\n        </Menu>\r\n    );\r\n\r\n\r\n}\r\nexport default JoinedRoom;","import {Menu, Tag, Popover, Button, Modal} from \"antd\";\r\nimport {CloseCircleOutlined, GroupOutlined, MinusCircleOutlined, PlusCircleOutlined} from \"@ant-design/icons\";\r\nimport React, {useState} from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\nimport CreateRoom from \"./createRoom\";\r\nimport webSocket from \"../websocket/Websocket\";\r\nimport JoinedRoom from \"./joinedRoom\";\r\n\r\nconst {SubMenu} = Menu;\r\n\r\nconst ExitRoom = (props) => {\r\n    const {joinedRooms} = props;\r\n    const onFinish = (values) => {\r\n        webSocket.send(\r\n            JSON.stringify({\r\n                    command: \"exitRoom\",\r\n                    body: {\r\n                        name: values.key\r\n                    }\r\n                }\r\n            )\r\n        )\r\n    };\r\n    return (\r\n        <Menu mode=\"inline\" onClick={(e) => {\r\n            onFinish(e)\r\n        }}>\r\n            <SubMenu title={<span><span><MinusCircleOutlined/></span>Exit</span>}>\r\n                {\r\n                    joinedRooms.map(name => {\r\n                        return (\r\n                            <Menu.Item key={name}>{name}</Menu.Item>\r\n                        )\r\n                    })\r\n                }\r\n            </SubMenu>\r\n        </Menu>\r\n    );\r\n}\r\nexport default ExitRoom;","import {Menu, Tag, Popover, Button, Modal} from \"antd\";\r\nimport {CloseCircleOutlined, GroupOutlined, MinusCircleOutlined, PlusCircleOutlined} from \"@ant-design/icons\";\r\nimport React, {useState} from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\nimport CreateRoom from \"./createRoom\";\r\nimport webSocket from \"../websocket/Websocket\";\r\nimport JoinedRoom from \"./joinedRoom\";\r\n\r\n\r\nconst ExitAllRooms = () => {\r\n    const onFinish = () => {\r\n        webSocket.send(\r\n            JSON.stringify({\r\n                    command: \"exitAllRoom\",\r\n                    body: {\r\n                    }\r\n                }\r\n            )\r\n        )\r\n    };\r\n\r\n    return (\r\n        <Menu mode=\"inline\" selectedKeys={['']} onClick={onFinish}>\r\n            <Menu.Item><span><CloseCircleOutlined/></span>Exit All</Menu.Item>\r\n        </Menu>\r\n    );\r\n}\r\nexport default ExitAllRooms;","import {Menu, Tag, Popover, Button} from \"antd\";\r\nimport {CloseCircleOutlined, GroupOutlined, MinusCircleOutlined, PlusCircleOutlined} from \"@ant-design/icons\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport webSocket from \"../websocket/Websocket\";\r\n\r\nconst {SubMenu} = Menu;\r\nconst AllRooms = (props) => {\r\n    const {allRooms} = props;\r\n    const onFinish = (values) => {\r\n        webSocket.send(\r\n            JSON.stringify({\r\n                    command: \"joinRoom\",\r\n                    body: {\r\n                        name: values.key.replace(' ', '')\r\n                    }\r\n                }\r\n            )\r\n        )\r\n    };\r\n\r\n    return (\r\n        <Menu mode=\"inline\" onClick={(e) => {\r\n            onFinish(e)\r\n        }}>\r\n            <SubMenu key=\"allRooms\" title={<span><GroupOutlined/><span>All Rooms</span></span>}>\r\n                {\r\n                    allRooms.map(name => {\r\n                    return (\r\n                    <Menu.Item key={name}>{name}</Menu.Item>\r\n                    );\r\n                })\r\n\r\n                }\r\n            </SubMenu>\r\n        </Menu>\r\n    );\r\n\r\n\r\n}\r\nexport default AllRooms;","export const reportReasons = [\"Sexual Content\", \"Violent or repulsive content\", \"Spam or misleading\"];","import { Modal, Button } from 'antd';\r\nimport React, { useState } from \"react\";\r\nimport webSocket from \"../../websocket/Websocket\";\r\nimport { Radio, Input } from 'antd';\r\nimport './reportForm.css'\r\nimport {reportReasons} from './constant'\r\n\r\nconst ReportForm = (props) => {\r\n    const [value, setValue] = useState(undefined);\r\n    const [checkedReason, setCheckedReason] = useState(\"\");\r\n    const [okButtonDisabled, setOkButtonDisabled]  = useState(true);\r\n    const {report, setReport} = props;\r\n\r\n    const handleOk = () => {\r\n       setReport({...report, visible: false})\r\n        webSocket.send(\r\n            JSON.stringify({\r\n                    command: \"report\",\r\n                    body: {\r\n                        reportedUsername: report.reportName,\r\n                        reportedReason: checkedReason,\r\n                        reportedRoom: report.reportRoom,\r\n                    }\r\n                }\r\n            )\r\n        )\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setReport({...report, visible: false})\r\n    };\r\n\r\n    const onChange = e => {\r\n        console.log('radio checked', e.target.value);\r\n        setOkButtonDisabled(false);\r\n        setValue(e.target.value);\r\n\r\n        if (e.target.value !== 3) {\r\n            setCheckedReason(reportReasons[e.target.value]);\r\n        }\r\n    };\r\n\r\n    const onChangeInput = e => {\r\n        console.log('input', e.target.value);\r\n\r\n        if (value === 3) {\r\n            setCheckedReason(e.target.value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                title=\"Report\"\r\n                visible={report.visible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n                okButtonProps={{disabled: okButtonDisabled}}\r\n            >\r\n                <p>Please Choose Your Reasons</p>\r\n                <Radio.Group class=\"radio-group\" onChange={onChange} value={value}>\r\n                    <Radio  class=\"radio-option\" value={0}>\r\n                        {reportReasons[0]}\r\n                    </Radio>\r\n                    <Radio  class=\"radio-option\" value={1}>\r\n                        {reportReasons[1]}\r\n                    </Radio>\r\n                    <Radio  class=\"radio-option\" value={2}>\r\n                        {reportReasons[2]}\r\n                    </Radio>\r\n                    <Radio  class=\"radio-option\" value={3}>\r\n                        More...\r\n                        {value === 3 ? <Input style={{ width: 100, marginLeft: 10 }} onChange={onChangeInput} /> : null}\r\n                    </Radio>\r\n                </Radio.Group>\r\n            </Modal>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ReportForm","import { Modal, Button } from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nconst ReportAdminForm = (props) => {\r\n    const {isReportAdminVisible, reportedReason, reportedUsername} = props.reportStore;\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setVisible(isReportAdminVisible);\r\n    }, [props.reportStore])\r\n\r\n    const handleOk = e => {\r\n        setVisible(false);\r\n    };\r\n\r\n    const handleCancel = e => {\r\n        setVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                title=\"Handle Report Message\"\r\n                visible={visible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n                okText={\"Approve\"}\r\n                cancelText={\"Disapprove\"}\r\n            >\r\n                <p>Reported User: {reportedUsername}</p>\r\n                <p>{reportedReason}</p>\r\n            </Modal>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { reportStore: state.report }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(ReportAdminForm);","import {Menu, Button, Modal, message} from \"antd\";\r\nimport React, {useState, useMemo, useEffect} from \"react\";\r\nimport CreateRoom from \"./createRoom\";\r\nimport JoinedRoom from \"./joinedRoom\";\r\nimport ExitRoom from \"./exitRoom\";\r\nimport ExitAllRooms from \"./exitAllRooms\";\r\nimport AllRooms from \"./allRooms\";\r\nimport webSocket from \"../websocket/Websocket\";\r\nimport {connect} from \"react-redux\";\r\nimport ReportForm from \"./report/reportForm\";\r\nimport ReportAdminForm from \"./report/reportAdminForm\";\r\n\r\nconst Index = (props) => {\r\n    const {room} = props;\r\n    const [joinedRooms, setJoinedRooms] = useState(() => []);\r\n    const [userList, setUserList] = useState(() => [[]]);\r\n    const [allRooms, setAllRooms] = useState(() => []);  //global\r\n    const [visible, setVisible] = useState(false);\r\n    const getAllRooms = useMemo(() => allRooms, [allRooms])\r\n    const getJoinedRooms = useMemo(() => joinedRooms, [joinedRooms])\r\n    const getUserList = useMemo(() => userList, [userList])\r\n    const [report, setReport] = useState({visible: false, reportRoom: null, reportName: null})\r\n    const handleClick = (e) => {\r\n        if (e.key === \"create\") {\r\n            setVisible(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(room.msg == null){\r\n            setJoinedRooms(prevState => room.joinedRoom);\r\n            setUserList(()=>room.userList);\r\n            setAllRooms(()=>room.allRooms);\r\n\r\n        }else{\r\n            if(room.type === \"err\") Modal.error({content: room.msg});\r\n            else Modal.success({content: room.msg});\r\n        }\r\n    }, [room])\r\n\r\n\r\n    return (\r\n        <Menu mode=\"inline\" onClick={handleClick} selectedKeys={['']}>\r\n            <Menu.Item key=\"create\">\r\n                <CreateRoom visible={visible} setVisible={setVisible}/>\r\n            </Menu.Item>\r\n            <ExitRoom joinedRooms={joinedRooms} />\r\n            <ExitAllRooms/>\r\n            <JoinedRoom joinedRooms={joinedRooms} userList={userList} setReport={setReport}/>\r\n            <AllRooms allRooms={allRooms}/>\r\n            <ReportForm report={report} setReport={setReport}/>\r\n            <ReportAdminForm/>\r\n        </Menu>\r\n\r\n\r\n    )\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {room: state.room}\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(Index);","import { Popover, Button, Input, Space } from 'antd';\r\n\r\n\r\nconst inviteForm = () =>{\r\n\r\n    const content = (\r\n        <Space align=\"center\">\r\n            <Input placeholder=\"Username\" />\r\n            <Button  type=\"primary\" >Invite</Button>\r\n        </Space>\r\n    );\r\n\r\n    return (\r\n        <Popover content={content} title=\"Invite your friend!\" trigger=\"click\">\r\n            <Button>Invite</Button>\r\n        </Popover>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default inviteForm","import {  List, Avatar, Button } from 'antd';\r\nimport inviteForm from \"../inviteForm\"\r\nimport webSocket from \"../../websocket/Websocket\";\r\n\r\nconst UserList = () => {\r\n    const data = [\r\n        {\"name\":{\"title\":\"Miss\",\"first\":\"Weiwei\",\"last\":\"Zhou\"},\"school\":\"Rice University\",\"interest\":\"Reading\"},\r\n        {\"name\":{\"title\":\"Mr\",\"first\":\"Xiao\",\"last\":\"Xia\"},\"school\":\"Rice University\",\"interest\":\"Sports\"},\r\n        {\"name\":{\"title\":\"Mr\",\"first\":\"Zhijian\",\"last\":\"Yao\"},\"school\":\"Rice University\",\"interest\":\"Traveling\"},\r\n        {\"name\":{\"title\":\"Mr\",\"first\":\"Xuyang\",\"last\":\"Xiao\"},\"school\":\"Rice University\",\"interest\":\"Sports\"},\r\n        {\"name\":{\"title\":\"Mr\",\"first\":\"Wenlong\",\"last\":\"Yan\"},\"school\":\"Rice University\",\"interest\":\"Sports\"},\r\n        {\"name\":{\"title\":\"Miss\",\"first\":\"Xinru\",\"last\":\"Xiao\"},\"school\":\"Rice University\",\"interest\":\"Sports\"},\r\n    ]\r\n    const ColorList = ['#f56a00', '#7265e6', '#ffbf00', '#00a2ae'];\r\n\r\n    return (\r\n        <div>\r\n        <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={data}\r\n            renderItem={item => (\r\n                <List.Item style={{padding: '15px'}}>\r\n\r\n                    <List.Item.Meta\r\n                        avatar={      <Avatar style={{ backgroundColor: ColorList[Math.floor(Math.random()*5)], verticalAlign: 'middle' }} size=\"large\" gap={4}>\r\n                            {item.name.first[0]}\r\n                        </Avatar>}\r\n                        description={item.name.first + \" \" +item.name.last}\r\n                        title = {item.school}\r\n                    />\r\n\r\n                    <Button type=\"primary\" shape=\"round\" size='small'\r\n                            onClick={() => alert(\"to complete\")}>\r\n                        Chat!\r\n                    </Button>\r\n\r\n                </List.Item>\r\n            )}\r\n        />\r\n            {inviteForm()}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default UserList;","import React, { useState } from 'react'\r\nimport {Layout, Row, Col} from 'antd'\r\nimport {Button, Popover} from 'antd'\r\nimport {useHistory} from 'react-router-dom'\r\nimport ChatArea from \"./chat-area/ChatArea\";\r\nimport Room from \"../room\";\r\nimport UserList from \"./userList\";\r\nimport ReportForm from \"../room/report/reportForm\";\r\nimport ReportAdminForm from \"../room/report/reportAdminForm\";\r\n\r\nconst {Header, Content, Footer, Sider} = Layout;\r\nconst Chat = (props) => {\r\n    const history = useHistory();\r\n    const [allMessages, setAllMessages] = useState({\r\n        'Chat Room 1': [\r\n            {\r\n                'id': 1,\r\n                'sender': 'Xiao Xia',\r\n                'text': 'This is the first message for chat room 1',\r\n                'time': '2020-10-29 08:00:00'\r\n            },\r\n            {\r\n                'id': 2,\r\n                'sender': 'Zhijian Yao',\r\n                'text': 'This is the second message for chat room 1',\r\n                'time': '2020-10-29 08:05:00'\r\n            },\r\n            {\r\n                'id': 3,\r\n                'sender': 'Weiwei Zhou',\r\n                'text': 'This is the third message for chat room 1',\r\n                'time': '2020-10-29 08:15:30'\r\n            }\r\n        ]\r\n    });\r\n    const userMap = {\r\n        'Chat Room 1': [\"Xiao Xia\", \"Zhijian Yao\", \"Weiwei Zhou\"]\r\n    };\r\n    const selectedChatRoom = 'Chat Room 1';\r\n    const currentUser = { name: 'Xiao Xia' };\r\n    const handleMessageDelete = ( messageId, chatRoom) => {\r\n        allMessages[chatRoom] = allMessages[chatRoom].filter((m) => m.id !== messageId);\r\n        setAllMessages({...allMessages});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Layout style={{height: '100vh'}}>\r\n            <Sider width='300px' theme='light'>\r\n                <Room />\r\n            </Sider>\r\n            <Layout>\r\n                <Header style={{padding: 0, backgroundColor: 'white', borderLeft: '2px solid rgba(0, 0, 0, 0.06)'}}>\r\n                    <span id={\"chat-area-header-room-name\"} style={{fontSize: 'larger', fontWeight: 'bolder'}}>{selectedChatRoom}</span>\r\n                    <span id={\"chat-area-header-user-count\"} style={{fontSize: 'medium'}}>{`  (${userMap[selectedChatRoom].length})`}</span>\r\n                    <Button style={{right: '-500px'}}\r\n                            type=\"primary\" shape=\"round\" size='small'\r\n                            onClick={() => {history.push('/')}}>\r\n                        Logout\r\n                    </Button>\r\n                </Header>\r\n                <Content style={{margin: '24px 16px 0'}}>\r\n                    <Row style={{height: '100%'}}>\r\n                        <Col span={17}>\r\n                            <div className=\"site-layout-background\"\r\n                                 style={{ minHeight: 360, height: '100%' }}>\r\n                                <ChatArea\r\n                                    inputMessages={allMessages[selectedChatRoom]}\r\n                                    chatRoom={selectedChatRoom}\r\n                                    onMessageDelete={handleMessageDelete}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                        <Col span={7} style={{borderLeft: '2px solid rgba(0, 0, 0, 0.06)'}}>\r\n                            {UserList()}\r\n                            {/*{ReportForm()}*/}\r\n                        </Col>\r\n                    </Row>\r\n                </Content>\r\n                {/*TEMP FOR Report*/}\r\n                {/*<ReportAdminForm report={report}/>*/}\r\n                <Footer style={{textAlign: 'center'}}>Chat App ©2020 Created by Summy the Owl</Footer>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Chat;","export const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\nexport const ON_MESSAGE = 'ON_MESSAGE';\r\nexport const ROOM = 'ROOM';\r\nexport const ON_REPORT = 'ON_REPORT';\r\n","import './App.css';\r\nimport React ,{useRef} from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Login from './components/login/login'\r\nimport Chat from './components/chat/index'\r\nimport { createBrowserHistory } from 'history'\r\nimport { useEffect } from 'react/cjs/react.production.min'\r\nimport webSocket from \"./components/websocket/Websocket\"\r\nimport { onMessage } from './actions/index'\r\nimport { connect } from 'react-redux'\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst App = (props) => {\r\n    const {dispatch, message} = props;\r\n\r\n    webSocket.onopen = () => {\r\n      console.log(\"connected\");\r\n    }\r\n\r\n    webSocket.onmessage = (message) => {\r\n      console.log(message);\r\n      props.onMessage(message);\r\n    }\r\n\r\n    return (\r\n    <div className=\"App\">\r\n       <Router history={history}>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Login} />\r\n          <Route path=\"/chat\" exact component={Chat}/>\r\n        </Switch>\r\n      </Router> \r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { message: state.message }\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMessage })(App);\r\n","import {message} from 'antd';\r\nimport {SIGN_IN, SIGN_OUT, ON_MESSAGE, CREATE_ROOM, ROOM, ON_REPORT} from './type';\r\n\r\nvar mesId = 0;\r\n\r\nexport const onMessage = (messages) => \r\n    dispatch => {\r\n        const data = JSON.parse(messages.data);\r\n        // if (data.request === \"login\") {\r\n        //     if (data.type === \"err\") {\r\n        //         dispatch({type: SIGN_IN, payload: {mesId: mesId++, isSignedIn: false, user: null}});\r\n        //     } else {\r\n        //         dispatch({type: SIGN_IN, payload: {mesId: mesId++, isSignedIn: true, user: data.user}});\r\n        //     }\r\n        // } else if (data.request === \"createRoom\") {\r\n        //     dispatch({type: CREATE_ROOM, payload: {type: data.type, msg: data.msg, body: data.body}});\r\n        // } else {\r\n        //     dispatch({type: ON_MESSAGE, payload: messages.data});\r\n        // }\r\n        switch (data.section) {\r\n            case \"login\":\r\n                dispatch({type: SIGN_IN, payload: {isSignedIn: true}});\r\n                break;\r\n            case \"room\":\r\n                dispatch({\r\n                    type: ROOM,\r\n                    payload: {\r\n                        request: data.request,\r\n                        type: data.type,\r\n                        msg: data.msg,\r\n                        param1: data.param1,\r\n                        param2: data.param2,\r\n                        param3: data.param3\r\n                    }\r\n                });\r\n                break;\r\n            case \"report\": \r\n                //console.log(data.msg);\r\n                const body = JSON.parse(data.msg);\r\n                //console.log(body);\r\n                dispatch({ type: ON_REPORT, payload: {reportedUsername: body.reportedUsername, reportedReason:body.reportedReason}});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SIGN_IN, SIGN_OUT } from '../actions/type';\r\n\r\nconst INTIAL_STATE = {\r\n  isSignedIn: null,\r\n  user: null,\r\n  mesId: 0,\r\n};\r\n\r\nexport default (state = INTIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      if (action.payload.isSignedIn === true)\r\n        return { ...state, isSignedIn: true, user: action.payload.user, mesId: action.payload.mesId };\r\n      else\r\n        return { ...state, isSignedIn: false, user: null, mesId: action.payload.mesId };\r\n    case SIGN_OUT:\r\n      return { ...state, isSignedIn: null, user: null, mesId: action.payload.mesId };\r\n    default:\r\n      return state;\r\n  }\r\n};","import {ROOM} from \"../actions/type\";\r\nimport {act} from \"@testing-library/react\";\r\n\r\nconst INTIAL_STATE = {\r\n    request: null,\r\n    type: null,\r\n    msg: null,\r\n    joinedRoom: [],\r\n    userList: [[]],\r\n    allRooms: []\r\n};\r\n\r\nexport default (state = INTIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case ROOM:\r\n            return {\r\n                request: action.payload.request,\r\n                type: action.payload.type,\r\n                msg: action.payload.msg,\r\n\r\n                joinedRoom: parse(action.payload.param1),\r\n                userList: parseNestedList(action.payload.param1, action.payload.param2),\r\n                allRooms: parse(action.payload.param3)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst parse = (value)=>{\r\n    if(value){\r\n        console.log(\"parse: \" + value)\r\n        return JSON.parse(value);\r\n    }\r\n}\r\nconst parseNestedList = (param1, value) =>{\r\n    console.log(\"before: \" + value);\r\n\r\n    if(value) {\r\n        let length = JSON.parse(param1).length;\r\n        let list = []\r\n        let v = value.substring(1, value.length - 1)\r\n        for(let i = 0; i < length; i++){\r\n            let start = v.indexOf(\"[\");\r\n            let end = v.indexOf(\"]\");\r\n            let ele = v.substring(start + 1, end).split(\",\");\r\n            list.push(ele);\r\n            v = v.substring(end + 1);\r\n        }\r\n        console.log(\"after: \" + list);\r\n        return list;\r\n    }\r\n}\r\n\r\n\r\n","import {ON_REPORT} from '../actions/type';\r\n\r\nconst INTIAL_STATE = {\r\n    isReportAdminVisible: false,\r\n    reportedUsername:\"\",\r\n    reportedReason: \"\"\r\n};\r\n\r\nexport default (state = INTIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case ON_REPORT:\r\n            return { ...state, isReportAdminVisible: true, reportedReason: action.payload.reportedReason,\r\n                reportedUsername: action.payload.reportedUsername};\r\n        default:\r\n            return state;\r\n    }\r\n};","import { message } from 'antd';\r\nimport { combineReducers } from 'redux';\r\nimport loginReducer from './loginReducer';\r\nimport messageReducer from './messageReducer';\r\nimport userListReducer from './userListReducer';\r\nimport roomReducer from \"./roomReducer\";\r\nimport reportReducer from \"./reportReducer\";\r\n\r\n\r\nexport default combineReducers({\r\n  login: loginReducer,\r\n  message: messageReducer,\r\n  userList: userListReducer,\r\n  room: roomReducer,\r\n  report: reportReducer,\r\n});","import { ON_MESSAGE } from '../actions/type';\r\n\r\n// const INTIAL_STATE = {\r\n//   messages: \"\"\r\n// };\r\n\r\nexport default (state = '', action) => {\r\n  switch (action.type) {\r\n    case ON_MESSAGE:\r\n        return { ...state, messages: action.payload.data };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { ON_MESSAGE } from '../actions/type';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    // case ON_MESSAGE:\r\n    //     return { ...state, messages: action.payload.data };\r\n    default:\r\n      return state;\r\n  }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}